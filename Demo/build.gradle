apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

buildscript {
    repositories {
		// 添加MobSDK的maven地址
		maven {
            url "http://mvn.mob.com/android"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        // 注册MobSDK
        classpath 'com.mob.sdk:MobSDK:+'
    }
}

String findBuildTools() {
    def localProperties = new File(rootProject.projectDir, "local.properties")
    if (localProperties.exists()) {
        def properties = new Properties()
        localProperties.withInputStream {
            instr->properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        def buildTools = new File(sdkDir, "build-tools")
        if (buildTools.exists()) {
            def tools = buildTools.list()
            if (tools != null) {
                Arrays.sort(tools)
                return tools[tools.length - 1]
            }
        }
    }
    return "25.0.2"
}

String findUMSSDKVersionName() {
	def versionName = "1.0.0"
    def file = new File(projectDir, "AndroidManifest.xml")
    def xml = new XmlSlurper()
    def manifest = xml.parse(file)
    try {
        def tmpValue = manifest.getProperty('@android:versionName').toString()
        return String.valueOf(tmpValue)
    } catch (Throwable t) {
        return versionName
    }
	return versionName
}

int findUMSSDKVersionCode() {
	def versionCode = 0
	findUMSSDKVersionName().split("\\.").each { v ->
		versionCode = versionCode * 100 + Integer.parseInt(v)
	}
	return versionCode == 0 ? 17 : versionCode
}

int findUMSSDKMinSdkVersion() {
    def file = new File(projectDir, "AndroidManifest.xml")
    def xml = new XmlSlurper()
    def manifest = xml.parse(file)
    try {
        def tmpValue = manifest.getAt("uses-sdk").getProperty('@android:minSdkVersion').toString()
        return Integer.parseInt(tmpValue)
    } catch (Throwable t) {
        return 15
    }
}

int findUMSSDKTargetSdkVersion() {
    def file = new File(projectDir, "AndroidManifest.xml")
    def xml = new XmlSlurper()
    def manifest = xml.parse(file)
    try {
        def tmpValue = manifest.getAt("uses-sdk").getProperty('@android:targetSdkVersion').toString()
        return Integer.parseInt(tmpValue)
    } catch (Throwable t) {
       return 25
    }
}

int findUMSSDKCompileSdkVersion() {
    def projProp = new File(projectDir, "project.properties")
    if (projProp.exists()) {
        def properties = new Properties()
        projProp.withInputStream {
            instr->properties.load(instr)
        }
        def target = properties.getProperty('target').trim()
        def pref = "android-"
        if (target != null && target.startsWith(pref)) {
            try {
                return Integer.parseInt(target.substring(pref.length()))
            } catch (Throwable t) {
                return 25;
            }
        }
    }
}

android {
    compileSdkVersion findUMSSDKCompileSdkVersion()
    buildToolsVersion findBuildTools()

    defaultConfig {
	    applicationId "com.mob.ums.demo"
        minSdkVersion findUMSSDKMinSdkVersion()
        targetSdkVersion findUMSSDKTargetSdkVersion()
        versionCode findUMSSDKVersionCode()
        versionName findUMSSDKVersionName()
    }

    signingConfigs {
        config {
            storeFile file("demokey.keystore")
            storePassword "123456"
            keyAlias "demokey.keystore"
            keyPassword "123456"
        }
    }
    sourceSets.main {
		manifest.srcFile 'AndroidManifest.xml'
        assets.srcDirs = ['assets']
        java.srcDirs = ['src']
        aidl.srcDirs = ['src']
        res.srcDirs = ['res']
        jniLibs.srcDirs = ['libs']
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

MobSDK {
    appKey "moba6b6c6d6"
    appSecret "b89d2427a3bc7ad1aea1e1e8c1d36bf3"

    ShareSDK {
        gui false
        devInfo {
            SinaWeibo {
                appKey "60529370"
                appSecret "575ab95e19b8a0dbf3c6246f8144ba8f"
                callbackUri "http://www.sharesdk.cn"
                shareByAppClient false
            }
            Wechat {
                appId "wxb05fd5b436d00743"
                appSecret "4e656dc8724dd78ba81b8c2fdd844787"
            }
            QQ {
                appId "100371282"
                appKey "aed9b0303e3ed1e27bae87c33761161d"
            }
            Facebook {
                appKey "1201984966578499"
                appSecret "eb6e8dcb41cfc7223ffbdaf31fece024"
                callbackUri "https://mob.com"
            }
        }
    }

    SMSSDK {
        gui false
    }

    UMSSDK{
        gui true
    }
}